[
  {
    "name": "CopyAlltheElementsofOneArraytoAnotherintheReverseOrder",
    "requirement": "Given the C++ program below, convert it into a functionally equivalent SystemC code. The expected input consists of a 6-element integer array.",
    "code": "#include <stdio.h>\n\nvoid printArray(int arr[], int len) {\n\tfor (int i = 0; i < len; i++) {\n\t\tprintf(\"%d \", arr[i]);\n\t}\n\tprintf(\"\\n\");\n}\n\nvoid reverseArray(int original[], int reversed[], int len) {\n\tfor (int i = 0; i < len; i++) {\n\t\treversed[i] = original[len - i - 1];\n\t}\n}\n\nint main() {\n\tint original_arr[] = {1, 2, 3, 4, 5};\n\tint len = sizeof(original_arr) / sizeof(original_arr[0]);\n\tint copied_arr[len];\n\n\treverseArray(original_arr, copied_arr, len);\n\n\tprintf(\"Original array: \");\n\tprintArray(original_arr, len);\n\n\tprintf(\"Resultant array: \");\n\tprintArray(copied_arr, len);\n\n\treturn 0;\n}\n\n"
  },
  {
    "name": "FindLCM",
    "requirement": "Given the C++ program below, convert it into a functionally equivalent SystemC code. The expected input consists of two integer numbers.",
    "code": "#include <iostream>\nusing namespace std;\n\nint findLCM(int a, int b) {\n    int max_num = (a > b) ? a : b;\n\n    while (true) {\n        if (max_num % a == 0 && max_num % b == 0) {\n            return max_num;\n        }\n        ++max_num;\n    }\n}\n\nint main() {\n    int a = 15, b = 20;\n    int lcm = findLCM(a, b);\n    cout << \"LCM of \" << a << \" and \" << b << \" is \" << lcm;\n    return 0;\n}\n"
  },
  {
    "name": "CheckWhetheraNumberisPrimeorNot",
    "requirement": "Given the C++ program below, convert it into a functionally equivalent SystemC code. The expected input consists of a integer number.",
    "code": "#include <iostream>\nusing namespace std;\n\nbool isPrime(int n) {\n    if (n <= 1)\n        return false;\n\n    int cnt = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0)\n            cnt++;\n    }\n    return cnt == 2;\n}\n\nint main() {\n    int n = 29;\n\n    if (isPrime(n))\n        cout << n << \" is prime\" << endl;\n    else\n        cout << n << \" is NOT prime\" << endl;\n\n    return 0;\n}\n\n"
  }
]