
unctions `getMin` and `getMax` are called with the array `arr` and its size `n` as arguments. These functions return the minimum and maximum values from the array, respectively. The results are then printed to the console.

### SystemC Code Snippet

Below is the equivalent SystemC code that uses the provided signals (`clk`, `start`, `done`, `min_val`, and `max_val`) to perform the same functionality:

```cpp
#include <systemc.h>
#include <algorithm> // For std::min_element and std::max_element

SC_MODULE(ArrayMinMax) {
    sc_in<bool> clk;
    sc_in<bool> start;
    sc_out<bool> done;
    sc_out<int> min_val;
    sc_out<int> max_val;

    int arr[5] = {12, 1234, 45, 67, 1};
    int n = 5;

    // Constructor
    SC_CTOR(ArrayMinMax) {
        // Process to find min and max when start is high
        SC_THREAD(find_min_max);
        sensitive << clk.pos();
        dont_initialize();
    }

    // Thread to find minimum and maximum values
    void find_min_max() {
        while (true) {
            wait(); // Wait for the rising edge of clk
            if (start.read()) {
                int min_value = *std::min_element(arr, arr + n);
                int max_value = *std::max_element(arr, arr + n);
                min_val.write(min_value);
                max_val.write(max_value);
                done.write(true);
                wait(); // Wait for the next clock cycle to ensure done is stable
                done.write(false);
            }
        }
    }
};
```

### Explanation of the SystemC Code

1. **Module Declaration**: 
   - `SC_MODULE(ArrayMinMax)` declares a SystemC module named `ArrayMinMax`.

2. **Signals**:
   - `sc_in<bool> clk`: Clock signal.
   - `sc_in<bool> start`: Start signal to trigger the computation.
   - `sc_out<bool> done`: Done signal indicating the computation is complete.
   - `sc_out<int> min_val`: Output for the minimum value.
   - `sc_out<int> max_val`: Output for the maximum value.

3. **Array and Size**:
   - An integer array `arr` is initialized with the same values as in the C++ code.
   - `int n = 5;` stores the size of the array.

4. **Constructor**:
   - The constructor initializes a thread `find_min_max` that is sensitive to the positive edge of the clock (`clk.pos()`).

5. **Thread Function**:
   - `void find_min_max()`: This function runs continuously in a loop.
   - `wait();` waits for the rising edge of the clock.
   - If `start` is high, it calculates the minimum and maximum values using `std::min_element` and `std::max_element`.
   - The results are written to `min_val` and `max_val`.
   - The `done` signal is set to true to indicate completion, followed by a short wait to stabilize the signal before setting it back to false.

This SystemC code replicates the functionality of the original C++ code, using the provided signals for integration with a testbench.