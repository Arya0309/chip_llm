
```json
{
  "inputs": ["num"],
  "outputs": ["factorial_result"],
  "summary": {
    "line_by_line": [
      {
        "line": "unsigned int factorial(unsigned int n)",
        "description": "Function declaration for calculating the factorial of a given number 'n'."
      },
      {
        "line": "{",
        "description": "Start of the function body."
      },
      {
        "line": "int res = 1, i;",
        "description": "Initialize 'res' to 1 and declare 'i' as an integer variable."
      },
      {
        "line": "for (i = 2; i <= n; i++)",
        "description": "Start a for loop that iterates from 2 to 'n'."
      },
      {
        "line": "res *= i;",
        "description": "Multiply 'res' by 'i' in each iteration of the loop."
      },
      {
        "line": "return res;",
        "description": "Return the calculated factorial value stored in 'res'."
      },
      {
        "line": "}",
        "description": "End of the function body."
      },
      {
        "line": "int main()",
        "description": "Main function declaration."
      },
      {
        "line": "{",
        "description": "Start of the main function body."
      },
      {
        "line": "int num = 5;",
        "description": "Initialize 'num' to 5."
      },
      {
        "line": "cout << \"Factorial of \" << num << \" is \" << factorial(num) << endl;",
        "description": "Print the factorial of 'num' using the 'factorial' function."
      },
      {
        "line": "return 0;",
        "description": "Return 0 to indicate successful execution of the program."
      },
      {
        "line": "}",
        "description": "End of the main function body."
      }
    ]
  },
  "systemc_code": {
    "code_snippet": "```\n#include <systemc.h>\n\n// Module that calculates the factorial of a number\nSC_MODULE(FactorialCalculator) {\n    sc_in<unsigned int> in;  // Input port for the number\n    sc_out<unsigned int> out; // Output port for the factorial result\n\n    // Constructor\n    SC_CTOR(FactorialCalculator) {\n        // Process to calculate factorial\n        SC_METHOD(calculate_factorial);\n        sensitive << in;\n    }\n\n    // Method to calculate the factorial\n    void calculate_factorial() {\n        unsigned int n = in.read();\n        unsigned int res = 1;\n        for (unsigned int i = 2; i <= n; i++) {\n            res *= i;\n        }\n        out.write(res);\n    }\n};\n```"
  }
}
```