
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ```json
{
  "inputs": ["n"],
  "outputs": ["result"],
  "summary": {
    "line_1": "// C++ Program to find the nth fibonacci number using loops",
    "line_2": "#include <bits/stdc++.h>",
    "line_3": "using namespace std;",
    "line_4": "",
    "line_5": "int fib(int n) {",
    "line_6": "  // For 0th and 1st term",
    "line_7": "  if (n <= 1)",
    "line_8": "      return n;",
    "line_9": "",
    "line_10": "  // Variable to store the last two terms",
    "line_11": "  int prev1 = 1, prev2 = 0;",
    "line_12": "",
    "line_13": "  // Variable that stores the current fibonacci term",
    "line_14": "  int curr;",
    "line_15": "",
    "line_16": "  // Calculating the next fibonacci number by using",
    "line_17": "  // the previous two number",
    "line_18": "  for (int i = 2; i <= n; i++) {",
    "line_19": "      curr = prev1 + prev2;",
    "line_20": "      prev2 = prev1;",
    "line_21": "      prev1 = curr;",
    "line_22": "  }",
    "line_23": "  return curr;",
    "line_24": "}",
    "line_25": "",
    "line_26": "int main() {",
    "line_27": "  int n = 5;",
    "line_28": "",
    "line_29": "  // Finding the nth fibonacci number",
    "line_30": "  cout << fib(n);",
    "line_31": "  return 0;",
    "line_32": "}"
  },
  "systemc_code": {
    "code": "```\n#include <systemc.h>\n\n// Module to compute the nth Fibonacci number\nSC_MODULE(Fibonacci) {\n    sc_in<int> n;       // Input port for the nth term\n    sc_out<int> result; // Output port for the Fibonacci number\n\n    // Constructor\n    SC_CTOR(Fibonacci) {\n        // Process to compute the Fibonacci number\n        SC_METHOD(compute_fib);\n        sensitive << n;\n    }\n\n    // Method to compute the nth Fibonacci number\n    void compute_fib() {\n        int prev1 = 1, prev2 = 0;\n        int curr;\n        if (n.read() <= 1) {\n            result.write(n.read());\n            return;\n        }\n        for (int i = 2; i <= n.read(); i++) {\n            curr = prev1 + prev2;\n            prev2 = prev1;\n            prev1 = curr;\n        }\n        result.write(curr);\n    }\n};\n```"
  }
}
```