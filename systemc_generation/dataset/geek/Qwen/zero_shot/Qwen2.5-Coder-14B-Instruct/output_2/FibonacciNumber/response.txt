
```json
{
  "input": "int n",
  "output": "int result",
  "summary": {
    "inputs": [
      {
        "name": "n",
        "description": "The position in the Fibonacci sequence for which the number is to be found."
      }
    ],
    "outputs": [
      {
        "name": "result",
        "description": "The nth Fibonacci number."
      }
    ],
    "blocks": [
      {
        "lines": [1-6],
        "description": "Include standard library headers and use the standard namespace."
      },
      {
        "lines": [8-18],
        "description": "Define a function `fib` that calculates the nth Fibonacci number using iterative loops.",
        "details": [
          {
            "lines": [9-10],
            "description": "Return `n` if `n` is 0 or 1, as these are the base cases of the Fibonacci sequence."
          },
          {
            "lines": [12-13],
            "description": "Initialize `prev1` to 1 and `prev2` to 0, representing the first two Fibonacci numbers."
          },
          {
            "lines": [15-16],
            "description": "Declare `curr` to store the current Fibonacci number."
          },
          {
            "lines": [18-23],
            "description": "Iterate from 2 to `n`, updating `curr` to the sum of `prev1` and `prev2`, then update `prev2` to `prev1` and `prev1` to `curr`."
          }
        ]
      },
      {
        "lines": [25-29],
        "description": "Main function to execute the program.",
        "details": [
          {
            "lines": [26],
            "description": "Initialize `n` to 5."
          },
          {
            "lines": [28],
            "description": "Call the `fib` function with `n` and print the result."
          }
        ]
      }
    ]
  },
  "systemc_code": {
    "code": "```cpp\n#include <systemc.h>\n\nSC_MODULE(Fibonacci) {\n    sc_in<int> n;\n    sc_out<int> result;\n\n    void calculate() {\n        int prev1 = 1, prev2 = 0;\n        int curr;\n\n        if (n.read() <= 1) {\n            result.write(n.read());\n            return;\n        }\n\n        for (int i = 2; i <= n.read(); i++) {\n            curr = prev1 + prev2;\n            prev2 = prev1;\n            prev1 = curr;\n        }\n        result.write(curr);\n    }\n\n    SC_CTOR(Fibonacci) {\n        SC_METHOD(calculate);\n        sensitive << n;\n    }\n};\n```"
  }
}
```