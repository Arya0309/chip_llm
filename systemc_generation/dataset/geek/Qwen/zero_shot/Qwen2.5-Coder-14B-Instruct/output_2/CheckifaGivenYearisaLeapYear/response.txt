
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ```json
{
  "inputs": ["year"],
  "outputs": ["is_leap_year"],
  "summary": [
    {
      "line": "// C++ program to check if a given year is a leap year or not",
      "description": "This is a comment indicating the purpose of the program."
    },
    {
      "line": "#include <iostream>",
      "description": "Include the iostream library for input and output operations."
    },
    {
      "line": "using namespace std;",
      "description": "Use the standard namespace to avoid prefixing standard library names with 'std::'."
    },
    {
      "line": "// Function to check leap year",
      "description": "This is a comment describing the function below."
    },
    {
      "line": "bool checkYear(int year)",
      "description": "Define a function named 'checkYear' that takes an integer 'year' as input and returns a boolean value."
    },
    {
      "block": [
        {
          "line": "if (year % 400 == 0) {",
          "description": "Check if the year is divisible by 400."
        },
        {
          "line": "return true;",
          "description": "If the year is divisible by 400, it is a leap year, so return true."
        }
      ]
    },
    {
      "block": [
        {
          "line": "else if (year % 100 == 0) {",
          "description": "If the year is not divisible by 400, check if it is divisible by 100."
        },
        {
          "line": "return false;",
          "description": "If the year is divisible by 100 but not by 400, it is not a leap year, so return false."
        }
      ]
    },
    {
      "block": [
        {
          "line": "else if (year % 4 == 0) {",
          "description": "If the year is not divisible by 100, check if it is divisible by 4."
        },
        {
          "line": "return true;",
          "description": "If the year is divisible by 4 but not by 100, it is a leap year, so return true."
        }
      ]
    },
    {
      "block": [
        {
          "line": "else {",
          "description": "If the year is not divisible by 4, it is not a leap year."
        },
        {
          "line": "return false;",
          "description": "Return false for all other cases."
        }
      ]
    },
    {
      "line": "// Driver code",
      "description": "This is a comment indicating the start of the main function."
    },
    {
      "line": "int main()",
      "description": "Define the main function, which serves as the entry point of the program."
    },
    {
      "line": "int year = 2000;",
      "description": "Declare and initialize an integer variable 'year' with the value 2000."
    },
    {
      "block": [
        {
          "line": "checkYear(year) ? cout << \"Leap Year\"",
          "description": "Call the 'checkYear' function with 'year' as the argument and use the ternary operator to print 'Leap Year' if the function returns true."
        },
        {
          "line": ": cout << \"Not a Leap Year\";",
          "description": "If the function returns false, print 'Not a Leap Year'."
        }
      ]
    },
    {
      "line": "return 0;",
      "description": "Return 0 to indicate successful execution of the program."
    }
  ],
  "systemc_code": "```\n#include <systemc.h>\n\nSC_MODULE(LeapYearChecker) {\n    sc_in<int> year;\n    sc_out<bool> is_leap_year;\n\n    void checkLeapYear() {\n        bool result = false;\n        if (year.read() % 400 == 0) {\n            result = true;\n        } else if (year.read() % 100 == 0) {\n            result = false;\n        } else if (year.read() % 4 == 0) {\n            result = true;\n        } else {\n            result = false;\n        }\n        is_leap_year.write(result);\n    }\n\n    SC_CTOR(LeapYearChecker) {\n        SC_METHOD(checkLeapYear);\n        sensitive << year;\n    }\n};\n\nint sc_main(int argc, char* argv[]) {\n    LeapYearChecker checker(\"checker\");\n    sc_start();\n    return 0;\n}\n```"
}
```