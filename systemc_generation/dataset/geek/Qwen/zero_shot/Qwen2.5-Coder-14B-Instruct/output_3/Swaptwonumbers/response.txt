
```json
{
  "inputs": ["a", "b"],
  "outputs": ["out_a", "out_b"],
  "summary": {
    "lines": [
      {
        "line_number": 1,
        "content": "// C++ program to swap two",
        "explanation": "Comment indicating the purpose of the program."
      },
      {
        "line_number": 2,
        "content": "// numbers using 3rd variable",
        "explanation": "Comment explaining the method used for swapping."
      },
      {
        "line_number": 3,
        "content": "#include <bits/stdc++.h>",
        "explanation": "Include directive for standard library components."
      },
      {
        "line_number": 4,
        "content": "using namespace std;",
        "explanation": "Using the standard namespace to avoid prefixing standard library names with 'std::'."
      },
      {
        "line_number": 6,
        "content": "// Driver code",
        "explanation": "Comment indicating the start of the main function."
      },
      {
        "line_number": 7,
        "content": "int main()",
        "explanation": "Declaration of the main function."
      },
      {
        "line_number": 8,
        "content": "{",
        "explanation": "Start of the main function body."
      },
      {
        "line_number": 9,
        "content": "    int a = 2, b = 3;",
        "explanation": "Initialization of variables 'a' and 'b' with values 2 and 3 respectively."
      },
      {
        "line_number": 11,
        "content": "    cout << \"Before swapping a = \" << a << \" , b = \" << b",
        "explanation": "Output statement to display the values of 'a' and 'b' before swapping."
      },
      {
        "line_number": 12,
        "content": "         << endl;",
        "explanation": "Continuation of the output statement to move to the next line."
      },
      {
        "line_number": 14,
        "content": "    // temporary variable",
        "explanation": "Comment indicating the purpose of the following variable declaration."
      },
      {
        "line_number": 15,
        "content": "    int temp;",
        "explanation": "Declaration of a temporary variable 'temp'."
      },
      {
        "line_number": 17,
        "content": "    // appying swapping algorithm",
        "explanation": "Comment indicating the start of the swapping algorithm."
      },
      {
        "line_number": 18,
        "content": "    temp = a;",
        "explanation": "Assignment of the value of 'a' to 'temp'."
      },
      {
        "line_number": 19,
        "content": "    a = b;",
        "explanation": "Assignment of the value of 'b' to 'a'."
      },
      {
        "line_number": 20,
        "content": "    b = temp;",
        "explanation": "Assignment of the value of 'temp' to 'b'."
      },
      {
        "line_number": 22,
        "content": "    cout << \"After swapping a = \" << a << \" , b = \" << b",
        "explanation": "Output statement to display the values of 'a' and 'b' after swapping."
      },
      {
        "line_number": 23,
        "content": "         << endl;",
        "explanation": "Continuation of the output statement to move to the next line."
      },
      {
        "line_number": 25,
        "content": "    return 0;",
        "explanation": "Return statement indicating successful execution of the program."
      },
      {
        "line_number": 26,
        "content": "}",
        "explanation": "End of the main function body."
      }
    ]
  },
  "systemc_code": {
    "code_snippet": "```cpp\n#include <systemc.h>\n\nSC_MODULE(SwapModule) {\n    sc_in<int> a;\n    sc_in<int> b;\n    sc_out<int> out_a;\n    sc_out<int> out_b;\n\n    void swap_process() {\n        int temp = a.read();\n        out_a.write(b.read());\n        out_b.write(temp);\n    }\n\n    SC_CTOR(SwapModule) {\n        SC_METHOD(swap_process);\n        sensitive << a << b;\n    }\n};\n\nint sc_main(int argc, char* argv[]) {\n    SwapModule swap(\"swap\");\n    sc_start();\n    return 0;\n}\n```"
  }
}
```