  **Inputs**:

* `n`: size of square matrix
* `a`: matrix of size `n` x `n`

**Outputs**:

* `det`: value of the determinant of the matrix `a`

**Summary of C++/C Code**:

The code defines a function `determinant` that calculates the determinant of a square matrix of size `n` x `n`. The function takes the matrix as an input and returns the determinant as a double-precision floating-point number.

The function first initializes a variable `det` to 1.0 and then enters a loop that iterates `n` times. During each iteration, it calculates the absolute maximum value in the `i`th column of `a` and saves it in a variable `pivot`. If the absolute value of the pivot is larger than the absolute value of the pivot, the function swaps the `i`th row of `a` with the pivot row and multiplies the determinant by -1.

The function then checks if the pivot is zero, and if so, it returns 0 immediately. Otherwise, it multiplies the determinant by the pivot element and then enters another loop that iterates `n-1` times. During each iteration, it calculates the factor `a[j][i]/a[i][i]` and uses it to eliminate the `i`th column of `a[j]`. The function then updates the determinant by multiplying it with the pivot element and subtracting the product of the factor and the `i`th column of `a[j]`.

The function then exits the outer loop and returns the determinant.

**Equivalent SystemC Code**:
```cpp
#include <systemc.h>

SC_MODULE(Determinant) {
    sc_in<int> n;
    sc_in<double[MAXN][MAXN]> a;
    sc_out<double> det;

    void determinant() {
        /* Initialize det to 1.0 */
        det.write(1.0);

        /* Loop over columns of a */
        for (int i = 0; i < n; i++) {
            /* Find the absolute maximum value in the i-th column of a */
            double pivot = a[i][i];
            for (int j = i + 1; j < n; j++) {
                double abs_pivot = abs(pivot);
                double abs_a = abs(a[j][i]);
                if (abs_a > abs_pivot) {
                    pivot = a[j][i];
                    det.write(-det.read());
                }
            }

            /* Check if pivot is zero */
            if (pivot == 0.0) {
                det.write(0.0);
                return;
            }

            /* Update determinant */
            det.write(det.read() * pivot);

            /* Eliminate the i-th column of a */
            for (int j = i + 1; j < n; j++) {
                double factor = a[j][i] / pivot;
                for (int k = i + 1; k < n; k++) {
                    a[j][k] -= factor * a[i][k];
                }
            }
        }

        /* Return determinant */
        det.write(det.read());
    }
};
```
Note that in the SystemC code, we have defined the `sc_in<double[MAXN][MAXN]> a` as the input port for the matrix `a`, which is consistent with the provided signals. We have also defined the `sc_out<double> det` as the output port for the determinant. The `determinant()` function performs the same operation as the original C++/C code, but it is implemented as a method in the `Determinant` module.