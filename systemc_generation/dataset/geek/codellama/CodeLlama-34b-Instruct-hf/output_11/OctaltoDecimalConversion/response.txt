  **Inputs:**

* `octal_input`: The input value in octal format.

**Outputs:**

* `decimal_output`: The output value in decimal format.

**Summary:**

This C++ program is a function that takes an integer input, `n`, in octal format and returns its decimal equivalent. The function uses a loop to extract each digit of the octal number, starting from the rightmost digit, and calculates its decimal equivalent by multiplying the digit with a base value of 8, raised to the power of the digit's position from the right. The resulting decimal values are then summed up to give the final decimal equivalent of the input octal number.

**SystemC Code:**
```c
#include <systemc.h>

SC_MODULE(OctalToDecimal) {
    sc_in<int> octal_input;
    sc_out<int> decimal_output;

    void calculateDec() {
        int num = octal_input.read();
        int dec_value = 0;
        int base = 1;

        while (num > 0) {
            int digit = num % 10;
            num /= 10;
            dec_value += digit * base;
            base *= 8;
        }

        decimal_output.write(dec_value);
    }

    SC_CTOR(OctalToDecimal) {
        SC_THREAD(calculateDec);
        sensitive << octal_input;
    }
};
```
In the above SystemC code, we have defined a module called `OctalToDecimal` with two input ports, `octal_input` and `decimal_output`, and a method `calculateDec` that performs the conversion from octal to decimal. The `calculateDec` method reads the input octal value from the `octal_input` port, converts it to decimal, and writes the result to the `decimal_output` port. The method is triggered by the `sensitive << octal_input` line, which means that whenever the value of `octal_input` changes, the `calculateDec` method will be called.