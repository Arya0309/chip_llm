  Using the information given, you will generate the SystemC code snippet that faithfully captures the logic of the original C++/C source.



```scsss
// Source code
using namespace std;

// Code
int linearSearch(vector<int> v, int key);

// To search in array
int i = linearSearch(v, key);

// Checking wat if element is found or not
if (i != -1)
        cout << key << " Found at Position: " << i + 1;
    else
        cout << key << " NOT found.";
    
// Returns the index of the element search of the vector
int linearSearch(vector<int> v, int key)
{
	// Loop over the vector, comparing the elements
	for (int i = 0; i < v.size(); i++) {
      // If the KEY IS FOUND
      if (v[i] == key) {
          return i;
        }
      }

  // Return some value denoting KEY NOT FOUND
  return -1;
}

```

```scsss
#include <systemc>

// SystemC module for linear search
// input signals are paramount
SC_MODULE(linearSearch);

// input data from the testbench
SC_METHOD(linearSearch);
sensitive << key << v << index << dec;

// The assignment operator
void linearSearch() {
	// Vector of input data
	sc_vector<int> input_data;

	// Search key
	sc_int<int> search_key;

  // Output port for index
	sc_output<int> search_index;

	// Declare loop variable
	sc_int<int> i;

	// Add indices to input data
	for (i = 0; i < input_data.size(); i++) {
    // If the KEY IS FOUND
    if ((input_data[i] == search_key) != 0) {
        // Set index output to the index of the
        // found key
        search_index = i + 1;
      }
    }

  // Set index output to 0 if the key is not found
  search_index = 0;

  // Print index
  mainstdout() << "Index of " << search_key << " is " << search_index
		"in the searched array." << endl;
}
```