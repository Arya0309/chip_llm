  This program takes a given array of data and rotates it by the input d elements. This code snippet utilizes the STL and utilizes a function through the OO paradigm. Code clarity and readability is main focus.

The below code uses the standard bit page STD C++ which allows for portability between different compilers and runtimes. 

> #include <bits/stdc++.h>
> using namespace std;

The program then creates a new array that the occupies the space of the temp array. The next block of the program will shuffle the array to the left by d, copying any remaining elements from the back of the array to the front. Lastly, it will copy the rotated version of the array into the original array.

This block of the program is a for loop that checks if the index of the array air less than the length of rotated data. If this is true, then a new value is added to the new array. The new array is eventually printed out. This is guided by the N variable, which stands for the size of the array.

Functions to rotate array and print array are both utilized to preserve the output. These functions provide better readability.

Displaying the output array is done using printing. The line that corresponds to this is shown below:

cout << arr[i] << " ";

In the system C++ code we have these inputs and outputs:

Outputs:
sc_out<int> out_array[7];

Inputs:
sc_in<int> arr[7];
sc_in<int> d;
sc_in<int> N;
