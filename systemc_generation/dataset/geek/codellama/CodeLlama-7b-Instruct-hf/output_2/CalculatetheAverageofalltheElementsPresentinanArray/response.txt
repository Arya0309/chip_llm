  C++ Program to Calculate Average of Array Elements
================================================================

Inputs
-----

The program has two inputs:

* An array of integers `a`, and
* A fixed number `n` that indicates the size of the array.

Outputs
------

The program has one output:

* The average of the array elements, represented as a double-precision floating-point value.

Code Analysis
--------------

The program consists of a single function, `average(a, n)`, which calculates the average of the array elements. The function has two major components: a for loop that calculates the sum of the array elements, and a division operator that divides the sum by the number of elements.

The driver code, `main()`, creates an array of integers, initializes it with a set of value, and passes the array and its size to the `average(a, n)` function to calculate the average.

SystemC Code
--------------

To generate an equivalent SystemC code that captures the logic of the original C++/C source, we can create a module that takes two input ports, an array of integers and an integer representing the size of the array, and an output port representing the average of the array elements.

```cpp
// C++ program to calculate average of array elements
#include <iostream>
using namespace std;

// Function that return average
// of an array.
double average(int a[], int n)
{
    // Find sum of array element
    int sum = 0;
    for (int i = 0; i < n; i++)
        sum += a[i];

    return (double)sum / n;
}

// Driver code
int main()
{
    int arr[] = { 10, 2, 3, 4, 5, 6, 7, 8, 9 };
    int n = sizeof(arr) / sizeof(arr[0]);

    cout << average(arr, n) << endl;
    return 0;
}

🌃‍♂️🏗:Applying the same modifications to the C++/C code as we did to the above example. Note that we are not creating a module as in the previous example, but instead creating individual ports and methods to represent the functionality of the code.
🌃‍♂️🏗: The default sensitivity list "<< a << b" can be used for the "add" method since were adding the two values only once.

```systemc
#include <systemc.h>

// Module that calculates an array average
SC_MODULE(ArrayAverage) {
    // Input ports
    sc_in<double> sum;
    sc_in<int> n;

    // Output port
    sc_out<double> average;

    // Constructor
    SC_CTOR(ArrayAverage) {
        // Process to calculate average
        SC_METHOD(calculateAverage);
        sensitive << sum << n;
    }

    // Method to calculate the average
    void calculateAverage() {
        average.write(sum.read() / n.read());
    }
};

int main() {
    ArrayAverage average; // Create an instance of the module

    // Connect the input ports
    int arr[] = { 10, 2, 3, 4, 5, 6, 7, 8, 9 };
    int n = sizeof(arr) / sizeof(arr[0]);
    average.sum.write(n);
    average.n.write(n);

    // Driver code to calculate average
    cout << average.average.read() << endl;

    return 0;
}

```

