  Inputs:

* `P`: the principal amount, a non-negative real value
* `R`: the rate of interest, a non-negative real value
* `T`: the time in years, a non-negative integer value

Outputs:

* `SI`: the simple interest, a non-negative real value

Logic:

The code calculates the simple interest for a given principal amount, rate of interest, and time. It does this by first defining `P`, `R`, and `T` as input variables in the C++ `main` function. The code then calculates the simple interest by first multiplying `P` and `T` together, and then dividing the result by 100, while multiplying the result by `R`. The resulting value is then assigned to the `SI` output variable, which is then printed to the console using `std::cout`.

SystemC Code:
```scss
#include <systemc.h>

SC_MODULE(SimpleInterest) {
    // Input ports
    sc_in<float> P;
    sc_in<float> R;
    sc_in<float> T;

    // Output port
    sc_out<float> SI;

    // Clock signal
    sc_clock clock;

    // Constructor
    SC_CTOR(SimpleInterest) {
        // Register clock signal
        clock(clock);

        // Add process to calculate SI
        SC_THREAD(calculate_si);
        sensitive << clock.posedge();
    }

    // Function to calculate SI
    void calculate_si() {
        // Read input signals
        float p = P.read();
        float r = R.read();
        int t = T.read();

        // Calculate SI
        float si = (p * t * r) / 100;

        // Write SI output
        SI.write(si);

        // Print results
        std::cout << "Simple Interest = " << si << std::endl;
    }
};
```
Note that in the SystemC code, the `P`, `R`, and `T` inputs are read using the `read()` method of the `sc_in` data type, while the `SI` output is written using the `write()` method of the `sc_out` data type. The `clock` signal is registered and used to trigger the `calculate_si` process. The process calculates the simple interest by multiplying `P`, `T`, and `R` together and then dividing the result by 100, while writing the result to the `SI` output. Finally, the results are printed to the console using `std::cout`.