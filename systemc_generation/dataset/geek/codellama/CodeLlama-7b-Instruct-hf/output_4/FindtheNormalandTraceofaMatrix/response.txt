  C++/C Code:
```
// C++ program to find trace and 
// normal of given matrix 
#include<bits/stdc++.h> 
using namespace std; 

// Size of given matrix 
const int MAX = 100; 

// Returns Normal of a matrix of 
// size n x n 
int findNormal(int mat[][MAX], int n) 
{ 
	int sum = 0; 
	for (int i = 0; i < n; i++) 
		for (int j = 0; j < n; j++) 
			sum += mat[i][j] * mat[i][j]; 
	return sqrt(sum); 
} 

// Returns trace of a matrix of 
// size n x n 
int findTrace(int mat[][MAX], int n) 
{ 
	int sum = 0; 
	for (int i = 0; i < n; i++) 
		sum += mat[i][i]; 
	return sum; 
} 

// Driven code 
int main() 
{ 
	int mat[][MAX] = {{1, 1, 1, 1, 1}, 
		{2, 2, 2, 2, 2}, 
		{3, 3, 3, 3, 3}, 
		{4, 4, 4, 4, 4}, 
		{5, 5, 5, 5, 5}}; 
	cout << "Trace of Matrix = " << 
			findTrace(mat, 5) << endl; 
	cout << "Normal of Matrix = " << 
			findNormal(mat, 5) << endl; 
	return 0; 
} 

```

Inputs:

* A matrix of size `MAX x MAX` as input.
* `MAX`: size of the matrix.

Outputs:

* Trace of the matrix.
* Normal of the matrix.

Summary:

* The input matrix is of size `MAX x MAX`.
* The functions `findTrace` and `findNormal` are used to compute the trace and normal of the matrix, respectively.
* The logic is computed using nested loops to compute the sum of the matrix element-wise squares and compute the trace and normal of the matrix.
* The matrices are computed using the `cout` statement at the end of the code.

SystemC Code:
```scss
#include <systemc.h>

// Module that computes the trace of a matrix
SC_MODULE(Trace) {
    sc_in<int> matrix[MAX][MAX]; // Input port for the matrix
    sc_out<int> trace; // Output port for the trace

    // Process to compute the trace
    SC_METHOD(compute_trace);
    sensitive << matrix;

    // Method to compute the trace of the matrix
    void compute_trace() {
        trace.write(findTrace(matrix, MAX));
    }
};

// Module that computes the normal of a matrix
SC_MODULE(Normal) {
    sc_in<int> matrix[MAX][MAX]; // Input port for the matrix
    sc_out<int> norm; // Output port for the normal

    // Process to compute the normal
    SC_METHOD(compute_normal);
    sensitive << matrix;

    // Method to compute the normal of the matrix
    void compute_normal() {
        norm.write(findNormal(matrix, MAX));
    }
};

int sc_main() {
    // Create the matrix input port
    sc_in<int> matrix[MAX][MAX];
    // Create the trace and normal output ports
    sc_out<int> trace, norm;

    // Create the trace module and normal module
    Trace trc(matrix, trace);
    Normal nrm(matrix, norm);

    // Run the modules
    trc.run();
    nrm.run();

    // Print the trace and normal
    cout << "Trace of Matrix: " << trace << endl;
    cout << "Normal of Matrix: " << norm << endl;

    return 0;
}
```