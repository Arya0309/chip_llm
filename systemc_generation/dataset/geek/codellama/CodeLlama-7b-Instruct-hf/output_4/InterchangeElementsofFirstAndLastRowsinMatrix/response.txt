  **Instructions**

Your task is to transform this C++ code:
```
#include <iostream> 
using namespace std; 

#define n 4 

void interchangeFirstLast(int m[][n]) 
{ 
	// swapping of element between first 
	// and last columns 
	for (int i = 0; i < n; i++) 
	{ 
		int t = m[i][0]; 
		m[i][0] = m[i][n - 1]; 
		m[i][n - 1] = t; 
	} 
} 


// Driver function 
int main() 
{ 
	// input in the array 
	int m[n][n] = {{8, 9, 7, 6}, 
				{4, 7, 6, 5}, 
				{3, 2, 1, 8}, 
				{9, 9, 7, 7}}; 

	interchangeFirstLast(m); 

	// printing the interchanged matrix 
	for (int i = 0; i < n; i++) 
	{ 
		for (int j = 0; j < n; j++) 
			cout << m[i][j] << " "; 
		cout << endl; 
	} 
} 
```
into a more versatile and scalable SystemC model.

Your work should be divided into the following sections:
* Input and output analysis
* Summary
* SystemC Code

**Output Sections**

1. Input and output analysis:
Answer the following questions:
* What are the inputs to this C++ code?
* What is the output of this C++ code?
2. Explaining the C++ code:
Provide a line-by-line explanation for the following code:
* The C++ code struts a 2D array, which is then edited to interchange the first and the last row. The result is then printed.
3. SystemC Code:
Design a SystemC model that faithfully reproduces the logic of the C++ code in the previous analysis. Furthermore, include the necessary input and output signals, as specified in the problem description.